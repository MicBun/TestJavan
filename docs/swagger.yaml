definitions:
  controllers.CreateAssetInput:
    properties:
      family_id:
        type: integer
      name:
        type: string
    required:
    - family_id
    - name
    type: object
  controllers.CreateFamilyInput:
    properties:
      descendant_id:
        type: integer
      name:
        type: string
      sex:
        type: string
    required:
    - name
    - sex
    type: object
  controllers.UpdateAssetInput:
    properties:
      family_id:
        type: integer
      name:
        type: string
    required:
    - family_id
    type: object
  controllers.UpdateFamilyInput:
    properties:
      descendant_id:
        type: integer
      name:
        type: string
      sex:
        type: string
    required:
    - sex
    type: object
  models.Asset:
    properties:
      family_id:
        type: integer
      id:
        type: integer
      name:
        type: string
    type: object
  models.Family:
    properties:
      descendant_id:
        type: integer
      id:
        type: integer
      name:
        type: string
      sex:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
paths:
  /assets:
    get:
      consumes:
      - application/json
      description: Get all assets
      produces:
      - application/json
      responses: {}
      summary: Get all assets
      tags:
      - Asset
    post:
      consumes:
      - application/json
      description: Create a asset
      parameters:
      - description: Asset
        in: body
        name: asset
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateAssetInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Asset'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a asset
      tags:
      - Asset
  /assets/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a asset
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Asset'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a asset
      tags:
      - todos
    put:
      consumes:
      - application/json
      description: Update a asset
      parameters:
      - description: Asset ID
        in: path
        name: id
        required: true
        type: integer
      - description: Asset
        in: body
        name: asset
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateAssetInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Asset'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a asset
      tags:
      - Asset
  /families:
    get:
      consumes:
      - application/json
      description: Get all families
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Family'
            type: array
      summary: Get all families
      tags:
      - Family
    post:
      consumes:
      - application/json
      description: Create a family
      parameters:
      - description: Family
        in: body
        name: family
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateFamilyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Family'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a family
      tags:
      - Family
  /families/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a family
      parameters:
      - description: Family ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Family'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a family
      tags:
      - Family
    put:
      consumes:
      - application/json
      description: Update a family
      parameters:
      - description: Family
        in: body
        name: family
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateFamilyInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Family'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a family
      tags:
      - Family
  /families/totalPriceAssetByApi:
    get:
      consumes:
      - application/json
      description: Get total price asset by api
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Family'
            type: array
      summary: Get total price asset by api
      tags:
      - Family
swagger: "2.0"
